{{- if .Values.kcpFrontProxy.openshiftRoute.enabled }}
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: kcp-front-proxy
spec:
  host: {{ .Values.externalHostname }}
  port:
    targetPort: 8443
  tls:
    termination: passthrough
  to:
    kind: Service
    name: kcp-front-proxy
    weight: 100
  wildcardPolicy: None
{{- end }}
{{- if .Values.kcpFrontProxy.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kcp-front-proxy
  annotations:
    {{- toYaml .Values.kcpFrontProxy.ingress.annotations | nindent 4 }}
spec:
  tls:
  - hosts:
      - {{ .Values.externalHostname }}
    {{- with .Values.kcpFrontProxy.ingress.secret -}}secretName: {{ . }}{{- end }}
  rules:
  - host: {{ .Values.externalHostname }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kcp-front-proxy
            port:
              number: 8443
{{- end }}
{{- if .Values.kcpFrontProxy.gateway.enabled }}
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: kcp-front-proxy
spec:
  gatewayClassName: {{ required "gateway.classname is required" .Values.kcpFrontProxy.gateway.className }}
  listeners:
  - name: tls
    protocol: TLS
    port: 8443
    tls:
      mode: Passthrough
    hostname: {{ .Values.externalHostname }}
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: TLSRoute
metadata:
  name: kcp-front-proxy
spec:
  parentRefs:
  - kind: Gateway
    name: kcp-front-proxy
  rules:
  - backendRefs:
    - name: kcp-front-proxy
      port: 8443
  hostnames:
  - {{ .Values.externalHostname }}
{{- end }}
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: kcp-front-proxy-issuer
spec:
  {{- toYaml .Values.kcpFrontProxy.certificate.issuerSpec | nindent 2 }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kcp-front-proxy
spec:
  secretName: kcp-front-proxy-cert
  duration: 8760h0m0s # 365d
  renewBefore: 360h0m0s # 15d
  {{ with .Values.certificates.subject }}
  subject:
    {{- toYaml . | nindent 4 }}
  {{ end}}
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  usages:
    - server auth
  dnsNames:
    - "{{ .Values.externalHostname }}"
  issuerRef:
    name: kcp-front-proxy-issuer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kcp-client-ca
spec:
  isCA: true
  commonName: kcp-client-ca
  secretName: kcp-client-ca
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  issuerRef:
    name: kcp-pki-ca
    kind: Issuer
    group: cert-manager.io
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: kcp-client-issuer
spec:
  ca:
    secretName: kcp-client-ca
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kcp-front-proxy-kcp-client-cert
spec:
  secretName: kcp-front-proxy-kcp-client-cert
  duration: 8760h0m0s # 365d
  renewBefore: 360h0m0s # 15d
  {{ with .Values.certificates.subject }}
  subject:
    {{- toYaml . | nindent 4 }}
  {{ end}}
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  usages:
    - client auth
  dnsNames:
    - "kcp-front-proxy"
  issuerRef:
    name: kcp-requestheader-client-issuer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: client-cert-for-kubeconfig
spec:
  secretName: client-cert-for-kubeconfig
  duration: 8760h0m0s # 365d
  renewBefore: 360h0m0s # 15d
  commonName: kcp-front-proxy
  subject:
    organizations:
      - "system:masters"
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  usages:
    - client auth
  issuerRef:
    name: kcp-server-client-issuer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kcp-front-proxy-virtual-workspaces-client-cert
spec:
  secretName: kcp-front-proxy-virtual-workspaces-client-cert
  duration: 8760h0m0s # 365d
  renewBefore: 360h0m0s # 15d
  {{ with .Values.certificates.subject }}
  subject:
    {{- toYaml . | nindent 4 }}
  {{ end}}
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  usages:
    - client auth
  dnsNames:
    - "kcp-front-proxy"
  issuerRef:
    name: kcp-requestheader-client-issuer
---
apiVersion: v1
kind: Service
metadata:
  name: kcp-front-proxy
spec:
  ports:
    - protocol: TCP
      name: kcp-front-proxy
      port: 8443
      targetPort: 8443
  selector:
    app: kcp-front-proxy
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kcp-front-proxy-config
data:
  path-mapping.yaml: |
    - path: /
      backend: https://kcp:6443
      backend_server_ca: /etc/kcp/tls/ca.crt
      proxy_client_cert: /etc/kcp-front-proxy/requestheader-client/tls/kcp/tls.crt
      proxy_client_key: /etc/kcp-front-proxy/requestheader-client/tls/kcp/tls.key
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kcp-front-proxy
  labels:
    app: kcp-front-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kcp-front-proxy
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: kcp-front-proxy
    spec:
      containers:
      - name: kcp-front-proxy
        image: {{ .Values.kcpFrontProxy.image }}:{{ .Values.kcpFrontProxy.tag }}
        ports:
        - containerPort: 8443
        command: ["/kcp-front-proxy"]
        args:
        - --secure-port=8443
        - --root-kubeconfig=/etc/kcp-front-proxy/kubeconfig/root-shard.kubeconfig
        {{- if .Values.kcpFrontProxy.shardsKubeConfigFlag }}
        - --shards-kubeconfig=/etc/kcp-front-proxy/kubeconfig/root-shard.kubeconfig
        {{- end }}
        - --tls-private-key-file=/etc/kcp-front-proxy/tls/tls.key
        - --tls-cert-file=/etc/kcp-front-proxy/tls/tls.crt
        - --client-ca-file=/etc/kcp-front-proxy/client/tls/ca.crt
        - --mapping-file=/etc/kcp-front-proxy/config/path-mapping.yaml
        - --v={{ .Values.kcpFrontProxy.v }}
        - --logging-format=json
        {{- if .Values.kcpFrontProxy.profiling.enabled }}
        - --profiler-address=localhost:{{- .Values.kcpFrontProxy.profiling.port -}}
        {{- end }}
        {{- if .Values.oidc }}
        - --oidc-issuer-url={{ .Values.oidc.issuerUrl }}
        - --oidc-client-id={{ .Values.oidc.clientId }}
        - --oidc-groups-claim={{ .Values.oidc.groupClaim }}
        - --oidc-username-claim={{ .Values.oidc.usernameClaim }}
        - --oidc-username-prefix={{ .Values.oidc.usernamePrefix }}
        - --oidc-groups-prefix={{ .Values.oidc.groupsPrefix }}
        {{- end }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: livez
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 45
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: readyz
            port: 8443
            scheme: HTTPS
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: kcp-front-proxy-cert
          mountPath: /etc/kcp-front-proxy/tls
        - name: kcp-front-proxy-config
          mountPath: /etc/kcp-front-proxy/config
        - name: client-cert-for-kubeconfig
          mountPath: /etc/kcp-front-proxy/client-cert-for-kubeconfig
        - name: proxy-kcp-kubeconfig
          mountPath: /etc/kcp-front-proxy/kubeconfig
        - name: kcp-client-ca
          mountPath: /etc/kcp-front-proxy/client/tls
        - name: kcp-ca
          mountPath: /etc/kcp/tls
        - name: kcp-virtual-workspaces-ca
          mountPath: /etc/virtual-workspaces/tls
        - name: kcp-front-proxy-kcp-client-cert
          mountPath: /etc/kcp-front-proxy/requestheader-client/tls/kcp
        - name: kcp-front-proxy-virtual-workspaces-client-cert
          mountPath: /etc/kcp-front-proxy/requestheader-client/tls/virtual-workspaces
      volumes:
      - name: kcp-front-proxy-cert
        secret:
          secretName: kcp-front-proxy-cert
      - name: kcp-client-ca
        secret:
          secretName: kcp-client-ca
          items:
            - key: ca.crt
              path: ca.crt
      - name: kcp-ca
        secret:
          secretName: kcp-cert
          items:
            - key: ca.crt
              path: ca.crt
      - name: kcp-virtual-workspaces-ca
        secret:
          secretName: kcp-virtual-workspaces-cert
          items:
            - key: ca.crt
              path: ca.crt
      - name: kcp-front-proxy-kcp-client-cert
        secret:
          secretName: kcp-front-proxy-kcp-client-cert
          items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
      - name: kcp-front-proxy-virtual-workspaces-client-cert
        secret:
          secretName: kcp-front-proxy-virtual-workspaces-client-cert
          items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
      - name: client-cert-for-kubeconfig
        secret:
          secretName: client-cert-for-kubeconfig
          items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
      - name: proxy-kcp-kubeconfig
        secret:
          secretName: proxy-kcp-kubeconfig
          items:
            - key: kubeconfig
              path: root-shard.kubeconfig
      - name: kcp-front-proxy-config
        configMap:
          name: kcp-front-proxy-config
          items:
            - key: "path-mapping.yaml"
              path: "path-mapping.yaml"
